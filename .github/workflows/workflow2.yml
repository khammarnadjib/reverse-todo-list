name: CD for main Branch

on:
  workflow_run :
    workflows : ['CI for dev Branch']
    types : 
      - completed
      

jobs:
  build-test-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js for backend
      - name: Set up Node.js (backend)
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # Step 3: Install dependencies and run backend tests
      - name: Install backend dependencies and run tests
        working-directory: backend
        run: |
          npm install
          npm test

      # Step 4: Set up Node.js for frontend
      - name: Set up Node.js (frontend)
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # Step 5: Install dependencies and run frontend tests
      - name: Install frontend dependencies and run tests
        working-directory: frontend
        run: |
          npm install
          npm test

      - name: Run E2E tests
        working-directory: ./e2e-tests
        env:
          NODE_ENV: test
        run: |
          # Installer ChromeDriver et lancer les tests Selenium
          sudo apt-get update
          sudo apt-get install -y wget unzip
          wget -q https://chromedriver.storage.googleapis.com/$(curl -s https://chromedriver.storage.googleapis.com/LATEST_RELEASE)/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/local/bin/
          export PATH=$PATH:/usr/local/bin/
          npm run test # Lancer les tests E2E avec Selenium

      # Step 6: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

       - name: Build Docker images using docker-compose
        run: |
          docker compose build

      - name: Push Docker images to Docker Hub
        run: |
          docker compose push